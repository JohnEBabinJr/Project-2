<div id='map'></div>

<script>
  mapboxgl.accessToken = 'pk.eyJ1IjoiZnh0emhvdSIsImEiOiJjazEwMTJncDgwMHp1M3BtdjkxZ3FicDY2In0.8rLpErDOJ5DGEOsiybn8Og';

  var map = new mapboxgl.Map({
    container: 'map', // Container ID
    style: 'mapbox://styles/mapbox/streets-v11', // Map style to use
    center: [-121.4942, 38.5778], // Starting position [lng, lat]
    zoom: 12, // Starting zoom level
  });

  function getGeoJson(geo) {

    for (var i = 0; i < response.length; i++) {
      var geo = {
        type: 'Feature',
        geometry: {
          type: 'Point',
          coordinates: [response[i].long, response[i].lat]
        },
        properties: {
          title: response[i].locationName,
          description: response[i].locationName,
          link: "/Jon/" + response[i].id,
          id: response[i].id
        },
      };
      arr.push(geo);
      console.log(arr);
    }

    var geoJson = {
      type: 'FeatureCollection',
      features: [arr],
    };
  }

  var arr = [];
  var geoJson;

  $.ajax({
    url: "api/Jons",
    type: "GET"
  }).then(function (response) {
    console.log(response);
    var arr = [];
    for (var i = 0; i < response.length; i++) {
      var geo = {
        type: 'Feature',
        geometry: {
          type: 'Point',
          coordinates: [response[i].long, response[i].lat]
        },
        properties: {
          title: response[i].locationName,
          address: response[i].address,
          message: response[i].description,
          link: "/Jon/" + response[i].id,
          id: response[i].id,
          icon: "circle",
          iconSize: [30, 30]
        },
      };
      //var marker = new mapboxgl.Marker() // Initialize a new marker
      //  .setLngLat([response[i].long, response[i].lat]) // Marker [lng, lat] coordinates
      //  .addTo(map); // Add the marker to the map
      arr.push(geo);
    }
    geoJson = {
      type: 'FeatureCollection',
      features: arr,
    };
  });

  map.on('load', function () {
    // Add a layer showing the places.
    console.log(geoJson);

    geoJson.features.forEach(function (marker) {
      console.log(marker);

      var pop = new mapboxgl.Popup()
        .setLngLat(marker.geometry.coordinates)
        .setMaxWidth("200px")
        .setHTML('<h5>' + marker.properties.title + '</h5><p>' + marker.properties.message + "</p><a href=" + marker.properties.link + "> Link </a>")
        .addTo(map);

      var el = document.createElement('div');
      el.id = 'marker';

      // add marker to map
      marker = new mapboxgl.Marker()
        .setLngLat(marker.geometry.coordinates)
        .setPopup(pop)
        .addTo(map);
    });
  });

  var popup = new mapboxgl.Popup({
    closeOnClick: true
  })
    .setLngLat([-121.4942, 38.5778])
    .setMaxWidth("200px")
    .setText("Our goal is to help everyone find a safe space to handle life's little emergencies. Use the map to find a bathroom near you.")
    .addTo(map);

  var geocoder = new MapboxGeocoder({ // Initialize the geocoder
    accessToken: mapboxgl.accessToken, // Set the access token
    mapboxgl: mapboxgl, // Set the mapbox-gl instance
    marker: false, // Do not use the default marker style
    placeholder: 'Search for bathrooms', // Placeholder text for the search bar
    // bbox: [-122.30937, 37.84214, -122.23715, 37.89838], // Boundary for Berkeley
    proximity: {
      longitude: -121.5059,
      latitude: 38.8500
    } // Coordinates of Sacramento
  });

  // Add the geocoder to the map
  map.addControl(geocoder);

  map.addControl(new mapboxgl.GeolocateControl({
    positionOptions: {
      enableHighAccuracy: true
    },
    trackUserLocation: true
  }));
</script>

{{!-- <div class="container-fluid bg bg-primary">
  <div class="row mt-4">
    {{#each Jon}}
    <div class="col col-4 p-3 shadow-sm">


      <h1 class="display-4">{{locationName}}</h1>
      <p class="lead">{{address}} </p>

      <hr class="my-4">

      <a class="btn btn-primary btn-lg" href="#" role="button">Learn more</a>

    </div>
    {{/each}}

  </div>
</div> --}}